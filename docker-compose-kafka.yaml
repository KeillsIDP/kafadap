version: "3"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPIC: "test_topic:1:3"
    depends_on:
      - zookeeper

  kafka-consumer:
    image: kafadap-consumer
    restart: always
    environment:
      - spring_kafka_consumer_bootstrap_servers=kafka:9092
    depends_on:
      - kafka
      - rest

  kafka-producer:
    image: kafadap-producer
    restart: always
    ports:
      - "8082:8082"
    environment:
      - spring_kafka_bootstrap_servers=kafka:9092
    depends_on:
      - kafka

  rest:
    image: kafadap-rest
    ports:
      - "8080:8080"
    environment:
     - spring_datasource_url=jdbc:postgresql://postgres_db:5432/kafka
    restart: always

  web:
    image: kafadap-web
    ports:
      - "8081:8081"
    environment:
      - kafka_host_javascript=localhost:8082
    restart: always
    depends_on:
      - kafka-producer

  postgres_db:
    image: postgres:latest
    container_name: PostgresCont
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=kafka
    volumes:
      - postgres_db:/var/lib/postgresql/data

volumes:
  postgres_db:
    driver: local